<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置整合mybaties过程-->

    <!-- 引入配置文件,来配置-->

    <context:property-placeholder  location="classpath:jdbc.properties"/>

    <!-- 数据库连接池配置-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- c3po的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动提交 commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="2000"/>
        <property name="acquireRetryAttempts" value="2"/>
 
    </bean>

    <!-- sqlsessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入 sqlsessionFactory-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 注入mybaties的全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描实体 -->
        <property name="typeAliasesPackage" value="com.bin.entity"/>
        <!-- 配置sql,提供sql查询需要的配置文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!-- 到此和数据库的交互,实体和相对应的sql都已经有了 -->
    </bean>

    <!-- 配置扫描dao接口包,动态实现dao接口并注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlsessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.bin.dao"/>
    </bean>



</beans>