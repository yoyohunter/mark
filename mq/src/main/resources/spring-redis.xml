<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd">

    <context:property-placeholder location="classpath*:test.properties"/>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="600"/>
        <!-- 控制一个pool可分配多少个jedis实例 -name="maxActive"-->
        <property name="maxIdle" value="300"/>
        <!-- 控制一个pool最多有多少个状态为idle(空闲)的jedis实例 -->
        <property name="minIdle" value="10"/>
        <!--初始化连接数-->
        <property name="maxWaitMillis" value="1000"/>
        <!-- 表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException -->
        <property name="testOnBorrow" value="true"/>
        <!-- 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->
        <property name="testOnReturn" value="true"/>
        <!--在进行returnObject对返回的connection进行validateObject校验-->
        <property name="testWhileIdle" value="true"/>
        <!--定时对线程池中空闲的链接进行validateObject校验-->
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis_url}"/>
        <property name="poolConfig" ref="poolConfig"/>
        <property name="usePool" value="true"/>
        <property name="port" value="6379"/>
        <property name="password" value="YueXingHuLian@45435361094"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <bean id="listener" class="com.yxhl.util.TestMessage"/>

    <redis:listener-container connection-factory="connectionFactory">
        <!-- the method attribute can be skipped as the default method name is "handleMessage" -->
        <!-- topic代表监听的频道，是一个正规匹配  其实就是你要订阅的频道-->
        <redis:listener ref="listener" method="handleMessage" topic="*"/>
    </redis:listener-container>

</beans>